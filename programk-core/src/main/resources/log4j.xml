<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "http://logging.apache.org/log4j/log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

    <!--Program D will use the stdout and stderr appenders configured here
        in a special way, routing error messages (WARN, SEVERE) to stderr
        and everything else to stdout, so leave this as-is if you want that behavior.
        
        You can change "PrintStackTraces" to "true" if you want to see stack
        traces for regular "caught" exception.  (For uncaught exception, see
        core.xml.)-->

    <!--The console output: stdout-->
    <appender name="stdout" class="org.aitools.programd.interfaces.ConsoleStreamAppender">
        <param name="encoding" value="UTF-8" />
        <param name="PrintStackTraces" value="false"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%d{ISO8601}] %p: %m%n"/>
        </layout>
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="LevelMax" value="info"/>
        </filter>
    </appender>

    <!--The console output: stderr-->
    <appender name="stderr" class="org.aitools.programd.interfaces.ConsoleStreamAppender">
        <param name="encoding" value="UTF-8" />
        <param name="PrintStackTraces" value="false"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%d{ISO8601}] %p: %m%n"/>
        </layout>
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="LevelMin" value="warn"/>
        </filter>
    </appender>

    <!--The main activity log file-->
    <appender name="activitylog" class="org.apache.log4j.RollingFileAppender">
        <param name="encoding" value="UTF-8" />
        <param name="File" value="/opt/aibot-kt/log/chat/activity.log"/>
        <param name="MaxFileSize" value="10MB"/>
        <param name="MaxBackupIndex" value="10"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%d{ISO8601}] %p: %m%n"/>
        </layout>
    </appender>

    <!--The listener console appender-->
    <appender name="listener-console" class="org.apache.log4j.ConsoleAppender">
        <param name="encoding" value="UTF-8" />
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%d{ISO8601}] %p: (%C{1}) %m%n"/>
        </layout>
    </appender>

    <!--The listener log file
        NOTE: Currently set to same path as main activity log;
        this just includes the listener classname-->
    <appender name="listener-log" class="org.apache.log4j.RollingFileAppender">
        <param name="encoding" value="UTF-8" />
        <param name="File" value="/opt/aibot-kt/log/chat/activity.log"/>
        <param name="MaxFileSize" value="10MB"/>
        <param name="MaxBackupIndex" value="10"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%d{ISO8601}] %p: (%C{1}) %m%n"/>
        </layout>
    </appender>

    <!--The matching log
        WARNING: The conversion pattern used here is slow!
        Only use this appender when debugging!-->
    <appender name="matchlog" class="org.apache.log4j.ConsoleAppender">
        <param name="encoding" value="UTF-8" />
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%d{ISO8601}] %C{1}: %m%n"/>
            <!--An uglier but more useful conversion pattern:-->
            <!--<param name="ConversionPattern" value="[%r] %l %m%n" />-->
        </layout>
    </appender>

    <!--The AIML processing log
        WARNING: The conversion pattern used here is slow!
        Only use this appender when debugging!-->
    <appender name="aimllog" class="org.apache.log4j.ConsoleAppender">
        <param name="encoding" value="UTF-8" />
        <layout class="org.apache.log4j.PatternLayout">
            <!--<param name="ConversionPattern" value="[%d{ISO8601}] %C{1}: %m%n"/>-->
            <!--An uglier but more useful conversion pattern:-->
            <param name="ConversionPattern" value="[%r] %l %m%n"/>
        </layout>
    </appender>

    <!--Chat logging can be done per-bot, using a BotIDFilter,
        or for all bots.  Examples of both are given here.-->

    <!--XML chat log file for a bot called SampleBot (using botid filter)-->
    <appender name="XMLChatlog-SampleBot-only" class="org.apache.log4j.RollingFileAppender">
        <param name="encoding" value="UTF-8" />
        <param name="File" value="/opt/aibot-kt/log/chat/SampleBot.xml"/>
        <param name="MaxFileSize" value="10MB"/>
        <param name="MaxBackupIndex" value="10"/>
        <layout class="org.aitools.programd.logging.XMLChatLogLayout"/>
        <filter class="org.aitools.programd.logging.ChatLogEventFilter"/>
        <!--<filter class="org.aitools.programd.logging.BotIDFilter">-->
            <!--<param name="BotID" value="SampleBot"/>-->
        <!--</filter>-->
    </appender>

    <!--Plain text log file for all bots (no botid filter applied)-->
    <appender name="TxtChatlog" class="org.apache.log4j.RollingFileAppender">
        <param name="encoding" value="UTF-8" />
        <param name="File" value="/opt/aibot-kt/log/chat/chat.log"/>
        <param name="MaxFileSize" value="10MB"/>
        <param name="MaxBackupIndex" value="10"/>
        <layout class="org.aitools.programd.logging.SimpleChatLogLayout">
            <param name="TimestampFormat" value="HH:mm:ss"/>
        </layout>
        <filter class="org.aitools.programd.logging.ChatLogEventFilter"/>
    </appender>

    <!--General activity (including chat)
        Set level to debug if you want to see more details.-->
    <logger name="programd">
        <level value="debug"/>
        <appender-ref ref="stdout"/>
        <appender-ref ref="stderr"/>
        <appender-ref ref="activitylog"/>
    </logger>

    <!--Logging for listeners.-->
    <logger name="programd.listener" additivity="false">
        <level value="info"/>
        <appender-ref ref="listener-console"/>
        <appender-ref ref="listener-log"/>
    </logger>

    <!--Logging for the JAIM library used by the AIM Listener.-->
    <logger name="com.levelonelabs.aim" additivity="false">
        <level value="off"/>
        <appender-ref ref="listener-console"/>
        <appender-ref ref="listener-log"/>
    </logger>

    <!--Matching: will be slow!
        Set level higher than debug (or off) for production.-->
    <logger name="programd.matching" additivity="true">
        <level value="off"/>
        <appender-ref ref="matchlog"/>
    </logger>

    <!--AIML processing: will be slow!
        Set level higher than debug (or off) for production.-->
    <logger name="programd.aiml-processing" additivity="true">
        <level value="off"/>
        <appender-ref ref="aimllog"/>
    </logger>

</log4j:configuration>